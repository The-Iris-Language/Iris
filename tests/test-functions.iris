.. Tests dynamic dispatch of inherited and overidden functions
class IceCream () {
    public:
        int temp;
        string flavor;
        string getFlavor() {
            return "yum";   
        }
        
        float getTemp(string message) {
            
            Olympus.println(message);
            return 32.0;
        }

        int func(int num) {
            if (num == 1) {
                Olympus.println("great success!");
            }
            return num;
        }

        int getOne() {
            int one = 1;
            return one;
        }
}

class Gelato of IceCream () {
    public: 
        int price (int i) {
            return 1;
        }
        string getFlavor () {
            return "tasty";
        }
}

class Main () {
    public: 
        int univ main() {
            IceCream i = new IceCream();
            Gelato g;
            i.getTemp("hallo");
            int num = 1;
            i.func(num);
            Olympus.println(i.getFlavor());
            return 0;
        }
}