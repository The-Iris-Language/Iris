
** Conflict (shift/reduce) in state 145.
** Tokens involved: VOID STRING INT FLOAT CHAR BOOL
** The following explanations concentrate on token VOID.
** This state is reached from program after reading:

class_decls_opt CLASS ID LBRACE encap_opt_list mem_decls_req

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
class_decls_opt EOF 
class_decls_opt class_decl 
                CLASS ID LBRACE encap_opt_list RBRACE 
                                (?)

** In state 145, looking ahead at VOID, reducing production
** encap_opt -> mem_decls_req
** is permitted because of the following sub-derivation:

encap_opt_list encap_opt // lookahead token appears because encap_opt can begin with VOID
encap_opt_list encap_opt // lookahead token is inherited
               mem_decls_req . 

** In state 145, looking ahead at VOID, shifting is permitted
** because of the following sub-derivation:

encap_opt_list encap_opt 
               mem_decls_req 
               mem_decls_req member 
                             var_decl 
                             typ ID SEMI 
                             . VOID 

** Conflict (shift/reduce) in state 143.
** Tokens involved: VOID STRING INT FLOAT CHAR BOOL
** The following explanations concentrate on token VOID.
** This state is reached from program after reading:

class_decls_opt CLASS ID LBRACE encap_opt_list PERMIT COLON mem_decls_opt

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
class_decls_opt EOF 
class_decls_opt class_decl 
                CLASS ID LBRACE encap_opt_list RBRACE 
                                (?)

** In state 143, looking ahead at VOID, reducing production
** encap_opt -> PERMIT COLON mem_decls_opt
** is permitted because of the following sub-derivation:

encap_opt_list encap_opt // lookahead token appears because encap_opt can begin with VOID
encap_opt_list encap_opt // lookahead token is inherited
               PERMIT COLON mem_decls_opt . 

** In state 143, looking ahead at VOID, shifting is permitted
** because of the following sub-derivation:

encap_opt_list encap_opt 
               PERMIT COLON mem_decls_opt 
                            mem_decls_opt member 
                                          var_decl 
                                          typ ID SEMI 
                                          . VOID 

** Conflict (shift/reduce) in state 140.
** Tokens involved: VOID STRING INT FLOAT CHAR BOOL
** The following explanations concentrate on token VOID.
** This state is reached from program after reading:

class_decls_opt CLASS ID LBRACE encap_opt_list PRIVATE COLON mem_decls_opt

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
class_decls_opt EOF 
class_decls_opt class_decl 
                CLASS ID LBRACE encap_opt_list RBRACE 
                                (?)

** In state 140, looking ahead at VOID, reducing production
** encap_opt -> PRIVATE COLON mem_decls_opt
** is permitted because of the following sub-derivation:

encap_opt_list encap_opt // lookahead token appears because encap_opt can begin with VOID
encap_opt_list encap_opt // lookahead token is inherited
               PRIVATE COLON mem_decls_opt . 

** In state 140, looking ahead at VOID, shifting is permitted
** because of the following sub-derivation:

encap_opt_list encap_opt 
               PRIVATE COLON mem_decls_opt 
                             mem_decls_opt member 
                                           var_decl 
                                           typ ID SEMI 
                                           . VOID 

** Conflict (shift/reduce) in state 13.
** Tokens involved: VOID STRING INT FLOAT CHAR BOOL
** The following explanations concentrate on token VOID.
** This state is reached from program after reading:

class_decls_opt CLASS ID LBRACE encap_opt_list PUBLIC COLON mem_decls_opt

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
class_decls_opt EOF 
class_decls_opt class_decl 
                CLASS ID LBRACE encap_opt_list RBRACE 
                                (?)

** In state 13, looking ahead at VOID, reducing production
** encap_opt -> PUBLIC COLON mem_decls_opt
** is permitted because of the following sub-derivation:

encap_opt_list encap_opt // lookahead token appears because encap_opt can begin with VOID
encap_opt_list encap_opt // lookahead token is inherited
               PUBLIC COLON mem_decls_opt . 

** In state 13, looking ahead at VOID, shifting is permitted
** because of the following sub-derivation:

encap_opt_list encap_opt 
               PUBLIC COLON mem_decls_opt 
                            mem_decls_opt member 
                                          var_decl 
                                          typ ID SEMI 
                                          . VOID 
