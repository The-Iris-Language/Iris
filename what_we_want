; ModuleID = 'Iris'
source_filename = "Iris"

%Object_vtable = type {}
%IceCream_vtable = type { i8* (%IceCream)*, double (%IceCream*, i32)* }
%IceCream = type { i32, [0 x i8*], i32, i8* }
%Gelato_vtable = type { i8* (%Gelato)*, double (%IceCream*, i32)*, i32 (%Gelato, i32)* }
%Gelato = type { i32, [0 x i8*] }
%Main_vtable = type { i32 (%Main)*, i32 (%Main)* }
%Main = type { i32, [0 x i8*] }
%big_vtable = type { %Object_vtable*, %IceCream_vtable*, %Gelato_vtable*, %Main_vtable* }

@Object_vtable_data = global %Object_vtable zeroinitializer
@fmt = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@yum = private unnamed_addr constant [4 x i8] c"yum\00", align 1
@fmt.1 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@"got temp!" = private unnamed_addr constant [10 x i8] c"got temp!\00", align 1
@IceCream_vtable_data = global %IceCream_vtable { i8* (%IceCream)* @IceCream_getFlavor, double (%IceCream*, i32)* @IceCream_getTemp }
@fmt.2 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@tasty = private unnamed_addr constant [6 x i8] c"tasty\00", align 1
@fmt.3 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@Gelato_vtable_data = global %Gelato_vtable { i8* (%Gelato)* @Gelato_getFlavor, double (%IceCream*, i32)* @IceCream_getTemp, i32 (%Gelato, i32)* @Gelato_price }
@fmt.4 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@"Hello world!" = private unnamed_addr constant [13 x i8] c"Hello world!\00", align 1
@fmt.5 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@Main_vtable_data = global %Main_vtable { i32 (%Main)* @main, i32 (%Main)* @Main_getOne }
@big_vtable_data = global %big_vtable { %Object_vtable* @Object_vtable_data, %IceCream_vtable* @IceCream_vtable_data, %Gelato_vtable* @Gelato_vtable_data, %Main_vtable* @Main_vtable_data }

declare i32 @printf(i8*, ...)

define i8* @IceCream_getFlavor(%IceCream %0) {
entry:
  ret i8* getelementptr inbounds ([4 x i8], [4 x i8]* @yum, i32 0, i32 0)
}

define double @IceCream_getTemp(%IceCream* %0, i32 %1) {
entry:
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.1, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @"got temp!", i32 0, i32 0))
  ret double 3.200000e+01
}

define i8* @Gelato_getFlavor(%Gelato %0) {
entry:
  ret i8* getelementptr inbounds ([6 x i8], [6 x i8]* @tasty, i32 0, i32 0)
}

define i32 @Gelato_price(%Gelato %0, i32 %1) {
entry:
  ret i32 1
}

define i32 @main(%Main %0) {
entry:
  %i = alloca %IceCream, align 8
  %vtable_index = getelementptr inbounds %IceCream, %IceCream* %i, i32 0, i32 0
  store i32 1, i32* %vtable_index, align 4
  %g = alloca %Gelato, align 8
  %vtable_index1 = getelementptr inbounds %Gelato, %Gelato* %g, i32 0, i32 0
  store i32 2, i32* %vtable_index1, align 4
  %vtable_index2 = getelementptr inbounds %IceCream, %IceCream* %i, i32 0, i32 0
  %vtable_index_int = load i32, i32* %vtable_index2, align 4
  %vtable = load %IceCream_vtable*, %IceCream_vtable** getelementptr inbounds (%big_vtable, %big_vtable* @big_vtable_data, i32 0, i32 ), align 8
  %fun_to_call = getelementptr inbounds %IceCream_vtable, %IceCream_vtable* %vtable, i32 0, i32 1
  %funfun = load double (%IceCream*, i32)*, double (%IceCream*, i32)** %fun_to_call, align 8
  %temp = call double %funfun(%IceCream* %i, i32 0)
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.4, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @"Hello world!", i32 0, i32 0))
  ret i32 0
}

define i32 @Main_getOne(%Main %0) {
entry:
  ret i32 1
}
